
consider the case 1 + (2-3-4)
if this is tokenized as 1,+,(,2,-3,-4,) parsing will fail
we want it to become 1,+,(,2,-,3,-,4,)
so we can't include the - in TokenNumber, instead add a unary minus to AtomicExpression

----Begin:Tokens--------
RequestEval=SAME
Number=/[0-9]+(\.[0-9]+)?/
Comma=/,/
Divide=/\//
LParen=/\(/
RParen=/\)/
Plus=/\+/
Minus=/\-/
Mult=/\*/
GreaterThan=/>/
LessThan=/</
Four=SAME
Five=SAME
Identifier=/\w+/
WhiteSpace=/\s+/|||||static GROUP = ChvLexer.SKIPPED;static LINE_BREAKS = true
----End:Tokens--------



----Begin:Rules--------
TotalEval:=RequestEval <Expression>                                                                                         ---> GetChildOrImage|Expression[0]
Expression:= <Lvl0Expression>                                                                                                  ---> GetChildOrImage|Lvl0Expression[0]
Lvl0Expression:= <Lvl1Expression> MANY{{ <PlusOrMinus> <Lvl1Expression> }}ENDMANY           ---> GenerateInfix|Lvl1Expression|PlusOrMinus|this.__$doarith|
Lvl1Expression:= <Lvl2Expression> MANY{{ <MultOrDiv> <Lvl2Expression> }}ENDMANY                 ---> GenerateInfix|Lvl2Expression|MultOrDiv|this.__$doarith|
Lvl2Expression:= <Lvl3Expression> MANY{{ <GreaterOrLess> <Lvl3Expression> }}ENDMANY           ---> GenerateInfix|Lvl3Expression|GreaterOrLess|this.__$doarith|
Lvl3Expression:= { <FunctionCall> | <AtomicExpression>  }                                                            ---> GetChildOrImageFromAlternatives
AtomicExpression:= [Minus] { <ParenExpression> | Number | <Variable> }                                  ---> Custom
ParenExpression:= LParen <Expression> RParen                                                                ---> GetChildOrImage|Expression[0]
FunctionCall:=Identifier LParen MANYSEP{{ Comma / <Expression> }}ENDMANYSEP RParen           ---> Custom
PlusOrMinus:={Plus|Minus}                                                                                                   ---> GetChildOrImageFromAlternatives
MultOrDiv:={Mult|Divide}                                                                                               ---> GetChildOrImageFromAlternatives
GreaterOrLess:={GreaterThan|LessThan}                                                                          ---> GetChildOrImageFromAlternatives
Variable:={Four | Five | Identifier }                                                                                  ---> Custom

----End:Rules--------

